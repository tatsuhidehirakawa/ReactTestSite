# ※注：このdocker-compose.ymlファイルは作成中であり使用していません。
# １ 正常に動いているローカルのdocker-compose.ymlファイルは残したまま、新たにルートにdocker-compose.ymlを設置。
# ２ それぞれのdocker-compose.ymlファイルの中身をそのままコピペ

version: "3"
services:

#---k_112wbs_re_dev_g--+-----+-----+-----+-----+-----+-----+-----+-----+-----+----#

  112wbs_dev: # このサービス名を不用意に変更するとdocker compose runの引数も変更する必要が出てくるので注意すること！
    build: ../k_910ext_dk_dev/k_111wbs_dk_dev
    volumes:
      - ./:/usr/src/app
    working_dir: /usr/src/app/k_113wbs_re_dev_c # 追加
    ports:
      - "3000:3000"
    command: sh -c "yarn start"
#   command: sh -c "cd k_112wbs_re_dev_d && yarn start"
    stdin_open: true

#---k_211aps_go_dev_g--+-----+-----+-----+-----+-----+-----+-----+-----+-----+----#

  211aps_dev:  # goapp -> 211aps_dev
    build:  # 変更：「build:」→「k_210aps_go_dev\k_211aps_go_dev_g」
      context: .
      dockerfile: ./k_211aps_dk_dev/Dockerfile # ./build/Dockerfile
    tty: true # コンテナの永続化
    volumes:
      - ./k_210aps_go_dev/k_211aps_go_dev_g/cmd/hello:/go/src/app # マウントディレクトリ

#---k_311dbs_pg_dev_g--+-----+-----+-----+-----+-----+-----+-----+-----+-----+----#

  311dbs_dev: # db -> 311dbs_dev
 #  build: ./k_310dbs_pg_dev\k_311dbs_pg_dev_g # 行を新規追加
    image: postgres:14
#   container_name: k_311dbs_pg_g # 変更：postgres -> k_311dbs_pg_g
    command: -c 'config_file=/etc/postgresql/postgresql.conf' # 追加
    ports:
      - 5432:5432
    volumes: # 永続データはどこにおいてどう記述する？
      - db-store:/var/lib/postgresql/data
      - ./k_010ext_dk_dev/k_311dbs_pg_dev/initdb:/docker-entrypoint-initdb.d #sql指定 initdb
      - ./k_010ext_dk_dev/k_311dbs_pg_dev/config/postgresql.conf:/etc/postgresql/postgresql.conf
    environment:
      - POSTGRES_PASSWORD=passw0rd
volumes:
  db-store:

#----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+----#
