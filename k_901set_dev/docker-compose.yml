# ※注：このdocker-compose.ymlファイルは作成中であり使用していません。
# 正常に動いているローカルのdocker-compose.ymlファイルは残したまま、新たにルートにdocker-compose.ymlを設置。

version: "3"
services:

#---k_111wbs_dev-+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+----#
  111wbs_dev:
    build: ../k_901set_dev/k_111wbs_dk_dev
    volumes:
    # - ./:/usr/src/app # ↓.yml統合に伴う修正（.jsonを参照させる）
      - ../k_111wbs_dev:/usr/src/app
  # working_dir: /usr/src/app/k_111wbs_dev     # バインドマウント
    working_dir: /usr/src/app
    environment:
      - CHOKIDAR_USEPOLLING=true                  # ホットリロード
    ports:
      - "3000:3000"
    command: sh -c "yarn start"
    stdin_open: true

#---k_211aps_dev-+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+----#
  211aps_dev:  # goapp -> 211aps_dev
    build:  # 変更：「build:」→「k_210aps_go_dev\k_211aps_dev_g」
      context: .
      dockerfile: ./k_211aps_dk_dev/Dockerfile # ./build/Dockerfile
    tty: true # コンテナの永続化
    volumes:
      - ../k_211aps_dev/cmd:/go/src/app # マウントディレクトリ

#---k_311dbs_dev-+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+----#
  311dbs_dev:
    image: postgres:14
  # container_name: k_311dbs_pg_g # 変更：postgres -> k_311dbs_pg_g
    command: -c 'config_file=/etc/postgresql/postgresql.conf' # 追加
    ports:
      - 5432:5432
    volumes: # 永続データはどこにおいてどう記述する？
      - db-store:/var/lib/postgresql/data
      - ./k_010ext_dk_dev/k_311dbs_dev/initdb:/docker-entrypoint-initdb.d #sql指定 initdb
      - ./k_010ext_dk_dev/k_311dbs_dev/config/postgresql.conf:/etc/postgresql/postgresql.conf
    environment:
      - POSTGRES_PASSWORD=passw0rd
volumes:
  db-store:
