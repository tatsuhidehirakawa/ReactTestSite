version: "3"
services:

  110wbs_tst:
    container_name: 110wbs_tst
    build:
      context: ../s_01_src/110wbs_src
      dockerfile: ../../s_05_tst/110wbs_tst/Dockerfile
    volumes:
      - ../s_01_src/110wbs_src:/usr/src/app
      - wbs-vol:/usr/src/app
    working_dir: /usr/src/app
    environment:
      - CHOKIDAR_USEPOLLING=true # Hotreload
    ports:
      # - "3000:3000"
      # - "3001:3000"
      - "3001:80"   # For Nginx
    tty: true
    stdin_open: true
    networks:
      - STGprd_devpkg_tst_network
    # platform: linux/x86_64

  120api_tst:
    container_name: 120api_tst
    # build: ./120api_tst
    build:
      context: ../s_01_src/124api_src/src
      dockerfile: ../../../s_05_tst/120api_tst/Dockerfile
    # environment:
    #   - DATABASE_HOST=${DATABASE_HOST}
    #   - DB_PORT=${PORT}
    #   - USER=${USER}
    #   - PGSQL_PW=${PGSQL_PW}
    #   - SSLMODE=${SSLMODE}
    env_file: ../tst.env
    tty: true
    volumes:
      - ../s_01_src/124api_src/src:/go/src
      - api-vol:/go/src
    ports:
      - "8081:8080"
    networks:
      - STGprd_devpkg_tst_network
    depends_on:
      - 130dbs_tst

  130dbs_tst:
    container_name: 130dbs_tst
    # image: postgres:14
    # build:
    #   context: ../s_01_src/134dbs_src
    #   dockerfile: ../../s_05_tst/130dbs_tst/Dockerfile
    build: ./130dbs_tst
    # working_dir: /usr/src/dbstore
    ports:
      - 5433:5432
    # command: -c 'config_file=/etc/postgresql/postgresql.conf'
    volumes:
      - dbs-vol:/var/lib/postgresql/data
      # - ../s_01_src/134dbs_src/initdb:/docker-entrypoint-initdb.d
      # - ../s_01_src/134dbs_src/config/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file: ../tst.env
    environment:
        POSTGRES_PASSWORD: ${PGSQL_PW}
    networks:
      - STGprd_devpkg_tst_network

volumes:
  wbs-vol:
  api-vol:
  dbs-vol:

networks:
  STGprd_devpkg_tst_network:
    driver: bridge
